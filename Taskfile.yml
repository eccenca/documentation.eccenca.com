---
# https://taskfile.dev

version: '3'

vars:
  PUBLIC_BRANCH: published
  CURRENT_VERSION: 25.2
  MATERIAL_TAG: 9.6.14
  MATERIAL_INSIDER_TAG: 9.6.14-insiders-4.53.16

tasks:

  default:
    summary: |
      List documented tasks
    silent: true
    cmds:
      - task --list

  versions:
    desc: List relevant versions for a mkdocs material bug report
    silent: true
    cmds:
      - |
        cat << EOF
        - Python: {{.PYTHON_VERSION}}
        - MkDocs: {{.MKDOCS_VERSION}}
        - Material: {{.MATERIAL_VERSION}}
        EOF
    vars:
      PYTHON_VERSION:
        sh: poetry run python --version
      MKDOCS_VERSION:
        sh: poetry run mkdocs --version | cut -d " " -f -3
      MATERIAL_VERSION:
        sh: poetry run pip show mkdocs-material | grep Version | cut -d " " -f 2

  clean:
    desc: Clean up working directory
    run: once
    cmds:
      - rm -rf site

  install:
    desc: Install needed dependencies
    cmds:
      - poetry install

  check:
    desc: Run complete test suite
    deps:
      - check:links

  check:links:
    desc: Check outgoing links
    deps:
      - install
    cmds:
      - poetry run linkcheckMarkdown -r docs 2>&1 | grep -v "ResourceWarning"

  build:
    desc: Build the page
    deps:
      - task: install
    cmds:
      - poetry run mkdocs build --strict

  serve:
    desc: Serve the page on localhost
    deps:
      - task: install
    cmds:
      - poetry run mkdocs serve

  use:public:
    desc: switch to public package (non insider)
    cmds:
      - poetry remove mkdocs-material || exit 0
      - poetry add mkdocs-material=={{.MATERIAL_TAG}}
      - poetry update

  use:insider-ssh:
    desc: switch to insider package from github:eccenca via ssh (default)
    cmds:
      - poetry remove mkdocs-material || exit 0
      - poetry add git+ssh://git@github.com:eccenca/mkdocs-material-insiders.git#{{.MATERIAL_INSIDER_TAG}}
      - poetry update

  use:insider-https-token:
    desc: switch to insider package from github:eccenca via ACCESS_TOKEN variable (build plan)
    cmds:
      - poetry remove mkdocs-material || exit 0
      - poetry add git+https://$ACCESS_TOKEN@github.com/eccenca/mkdocs-material-insiders.git#{{.MATERIAL_INSIDER_TAG}}
      - poetry update

  update:icons:
    desc: update the used eccenca icons from carbon
    cmds:
      - poetry run dec-tool update-icons \
          --version {{.GUI_VERSION}} \
          -o {{.ICON_DIR}} \
    vars:
      GUI_VERSION: main
      ICON_DIR: overrides/.icons/eccenca

  update:cmemc:
    desc: re-generates the cmemc command reference
    cmds:
      - rm -rf {{.REFERENCE_DIR}}/*
      - cmemc manual --format markdown-multi-page --output-dir {{.REFERENCE_DIR}}
    vars:
      REFERENCE_DIR: docs/automate/cmemc-command-line-interface/command-reference

  update:shape-reference:
    desc: re-generates the shape and datatype references
    summary: >
      This task uses a running Corporate Memory to upload a specification for
      a custom markdown endpoint (see shapedocu.ttl in
      tools/update-shape-reference) for exporting.


      In order to use this task, a valid cmemc Corporate Memory connection needs
      to be available in the environment.
      This can be done by setting CMEMC_CONNECTION or by using the eval command.

        - CMEMC_CONNECTION=mycmem task update:shape-reference
        - eval $(cmemc -c mycmem config eval); task update:shape-reference
    cmds:
      - cmemc graph import --replace {{.SRC}}
      - cp {{.SRC}}/nodeshapedocu-head.md {{.NODESHAPES_MD}}
      - "{{.CURL}} {{.API}}/nodeshapedocu >>{{.NODESHAPES_MD}}"
      - cp {{.SRC}}/propertyshapedocu-head.md {{.PROPERTYSHAPES_MD}}
      - "{{.CURL}} {{.API}}/propertyshapedocu >>{{.PROPERTYSHAPES_MD}}"
      - cp {{.SRC}}/datatypedocu-head.md {{.DATATYPES_MD}}
      - "{{.CURL}} {{.API}}/datatypedocu >>{{.DATATYPES_MD}}"
    vars:
      DIR: docs/explore-and-author/graph-exploration/building-a-customized-user-interface
      TOKEN:
        sh: cmemc admin token
      DP:
        sh: cmemc config get DP_API_ENDPOINT
      CURL: "curl --silent -H 'Authorization: Bearer {{.TOKEN}}'"
      API: "{{.DP}}/api/custom"
      NODESHAPES_MD: "{{.DIR}}/node-shapes/index.md"
      PROPERTYSHAPES_MD: "{{.DIR}}/property-shapes/index.md"
      DATATYPES_MD: "{{.DIR}}/datatype-reference/index.md"
      SRC: tools/update-shape-reference

  update:di-reference:
    desc: update the task and operator reference pages
    cmds:
      - poetry run dec-tool update-di-reference

  update:integrations:
    desc: update integrations page
    cmds:
      - poetry run dec-tool update-integrations

  public:versions:
    desc: List public documentation versions
    deps:
      - task: install
    cmds:
      - poetry run mike list -b {{.PUBLIC_BRANCH}}

  public:deploy:
    desc: Publish the working directory as version {{.CURRENT_VERSION}}
    deps:
      - task: install
    cmds:
      - >
        poetry run mike deploy -b {{.PUBLIC_BRANCH}}
        --update-aliases {{.CURRENT_VERSION}} latest

  public:serve:
    desc: Start a webserver to manually validate the public branch
    deps:
      - task: install
    cmds:
      - poetry run mike serve -b {{.PUBLIC_BRANCH}}

