---
name: Test

# run on pull requests and all (feature/fix) branches
on:
  pull_request:
  push:
    branches:
      - '**'
      - '!main'
  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# https://docs.github.com/en/actions/using-workflows/workflow-syntax-for-github-actions#concurrency
concurrency:
  group: ${{ github.head_ref || github.run_id }}
  cancel-in-progress: true

jobs:

  build:
    runs-on: ubuntu-latest

    steps:
      - name: checkout documentation.eccenca.com
        uses: actions/checkout@v3
        with:
          submodules: "recursive"
          fetch-depth: "0"

      - name: checkout mkdocs-material-insiders
        uses: actions/checkout@v3
        with:
          repository: "eccenca/mkdocs-material-insiders"
          ref: "8.5.4-insiders-4.24.1"
          token: {{ secrets.ACCESS_TOKEN }}
          fetch-depth: "0"

      - name: ls
        run: ls mkdocs-material-insiders

      - name: setup python
        uses: actions/setup-python@v2
        with:
          python-version: 3.x

      - name: install task
        uses: arduino/setup-task@v1

      - name: install and configure poetry
        uses: snok/install-poetry@v1
        with:
          virtualenvs-create: true
          virtualenvs-in-project: true
          installer-parallel: true

      - name: reconfigure private repository access
        run: GITHUB_TOKEN=${{ secrets.ACCESS_TOKEN }} task use:insider-https-token

      - name: load environment cache
        id: cached-poetry-dependencies
        uses: actions/cache@v2
        with:
          path: .venv
          key: venv-${{ runner.os }}-${{ steps.setup-python.outputs.python-version }}-${{ hashFiles('**/poetry.lock') }}

      - name: check
        run: task check

      - name: build
        run: task clean build

