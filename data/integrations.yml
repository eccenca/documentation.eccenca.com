# Integrations content
---
integrations:
  # Template (do not remove)
  #
  # - name: "Mandatory Short Name of the Service or Application (plain text)"
  #   icon: ":black_large_square:"
  #   # icon spec - have a look at https://squidfunk.github.io/mkdocs-material/reference/icons-emojis/"
  #   content: |
  #     Mandatory small markdown paragraph which describes, what you can do with the service or application.
  #     The content should have at least one link.
  #     Possible placeholders:
  #     - {{p.pluginID}} - markdownlink to plugin (replace all '-' with '_')
  #     - {{p.pluginID_ref}} - relative link to plugin (replace all '-' with '_')

  #####
  # Triple / Quad Stores
  #####

  - name: Neptune
    icon: ":other-neptune:"
    content: |
      Load and write Knowledge Graphs to Amazon Neptune by using the {{p.sparqlEndpoint}} dataset.
      Query data from Amazon Neptune by using the SPARQL
      [Construct]({{p.sparqlCopyOperator_ref}}),
      [Select]({{p.sparqlSelectOperator_ref}}) and
      [Update]({{p.sparqlUpdateOperator_ref}}) tasks.
      Amazon Neptune can be used as the integrated Quad Store as well (beta).

  - name: GraphDB
    icon: ":other-graphdb:"
    content: |
      Load and write Knowledge Graphs to an external GraphDB store by using the {{p.sparqlEndpoint}} dataset.
      Query data from GraphDB by using the SPARQL
      [Construct]({{p.sparqlCopyOperator_ref}}),
      [Select]({{p.sparqlSelectOperator_ref}}) and
      [Update]({{p.sparqlUpdateOperator_ref}}) tasks.
      GraphDB can be used as the integrated Quad Store as well.

  - name: Qlever
    icon: ":other-qlever:"
    content: |
      Load and write Knowledge Graphs to an external Qlever store by using the {{p.sparqlEndpoint}} dataset.
      Query data from Qlever by using the SPARQL
      [Construct]({{p.sparqlCopyOperator_ref}}),
      [Select]({{p.sparqlSelectOperator_ref}}) and
      [Update]({{p.sparqlUpdateOperator_ref}}) tasks.
      Qlever can be used as the integrated Quad Store as well (beta).

  - name: Tentris
    icon: ":other-tentris:"
    content: |
      Load and write Knowledge Graphs to an external Tentris store by using the {{p.sparqlEndpoint}} dataset.
      Query data from Tentris by using the SPARQL
      [Construct]({{p.sparqlCopyOperator_ref}}),
      [Select]({{p.sparqlSelectOperator_ref}}) and
      [Update]({{p.sparqlUpdateOperator_ref}}) tasks.
      Tentris can be used as the integrated Quad Store as well (beta).

  - name: Virtuoso
    icon: ":black_large_square:"
    content: |
      Load and write Knowledge Graphs to an external Openlink Virtuoso store by using the {{p.sparqlEndpoint}} dataset.
      Query data from Virtuoso by using the SPARQL
      [Construct]({{p.sparqlCopyOperator_ref}}),
      [Select]({{p.sparqlSelectOperator_ref}}) and
      [Update]({{p.sparqlUpdateOperator_ref}}) tasks.
      Virtuoso can be used as the integrated Quad Store as well (beta).

  #####
  # LLM Provider
  #####

  - name: Ollama
    icon: ":simple-ollama:"
    content: |
      Use the {{p.cmem_plugin_llm_ExecuteInstructions}} or {{p.cmem_plugin_llm_CreateEmbeddings}} task
      to interact with Ollama provided Large Language Models (LLMs).

  - name: Azure AI Foundry
    icon: ":material-microsoft-azure:"
    content: |
      Use the {{p.cmem_plugin_llm_ExecuteInstructions}} or {{p.cmem_plugin_llm_CreateEmbeddings}} task
      to interact with any [Azure AI Foundry provided Large Language Models](https://ai.azure.com/catalog) (LLMs).

  - name: OpenRouter
    icon: ":octicons-ai-model-24:"
    content: |
      Use the {{p.cmem_plugin_llm_ExecuteInstructions}} or {{p.cmem_plugin_llm_CreateEmbeddings}} task
      to interact with any [OpenRouter provided Large Language Models](https://openrouter.ai/models) (LLMs).

  - name: Anthropic / Claude
    icon: ":simple-anthropic:"
    content: |
      Use the {{p.cmem_plugin_llm_ExecuteInstructions}} or {{p.cmem_plugin_llm_CreateEmbeddings}} task
      to interact with any
      [Anthropic / Claude provided Large Language Models](https://docs.claude.com/en/docs/about-claude/models/overview)
      (LLMs).

  - name: OpenAI
    icon: ":simple-openai:"
    content: |
      Use the {{p.cmem_plugin_llm_ExecuteInstructions}} or {{p.cmem_plugin_llm_CreateEmbeddings}} task
      to interact with any [OpenAI provided Large Language Models](https://platform.openai.com/docs/models) (LLMs).

  #####
  # Services
  #####

  - name: Office 365
    icon: ":material-microsoft-office:"
    content: |
      Use the {{p.office365preadsheet}} to read and write to Excel workbooks in Office 365.

  - name: Google Drive
    icon: ":material-google-drive:"
    content: |
      Use the {{p.googlespreadsheet}} to read and write to Excel workbooks in Google Drive.

  - name: SSH
    icon: ":material-ssh:"
    content: |
      Interact with SSH servers to {{p.cmem_plugin_ssh_Download}} or {{p.cmem_plugin_ssh_Execute}}.

  - name: Kubernetes
    icon: ":simple-kubernetes:"
    content: |
      You can {{p.cmem_plugin_kubernetes_Execute}} and captures its output to process it.

  - name: GraphQL
    icon: ":simple-graphql:"
    content: |
      You can execute a {{p.cmem_plugin_graphql_workflow_graphql_GraphQLPlugin}} and process the result in a workflow.

  - name: eMail / SMTP
    icon: ":material-email-outline:"
    content: |
      Send plain text or HTML formatted [eMail messages]({{p.SendEMail_ref}}) using an SMTP server.

  - name: Jira
    icon: ":simple-jira:"
    content: |
      Execute a {{p.cmem_plugin_jira_JqlQuery}} on a Jira instance to fetch and integrate issue data.

  - name: Kafka
    icon: ":simple-apachekafka:"
    content: |
      You can [send]({{p.cmem_plugin_kafka_SendMessages_ref}}) and
      [receive messages]({{p.cmem_plugin_kafka_ReceiveMessages_ref}}) to and from a Kafka topic.

  - name: Nextcloud
    icon: ":simple-nextcloud:"
    content: |
      Use a Nextcloud instance to [download files]({{p.cmem_plugin_nextcloud_Download_ref}}) to process
      them or [upload files]({{p.cmem_plugin_nextcloud_Upload_ref}}) you created with Corporate Memory.

  - name: Salesforce
    icon: ":fontawesome-brands-salesforce:"
    content: |
      Interact with your Salesforce data, such as {{p.cmem_plugin_salesforce_workflow_operations_SobjectCreate}} or
      execute a {{p.cmem_plugin_salesforce_SoqlQuery}}.

  - name: Mattermost
    icon: ":simple-mattermost:"
    content: |
      Send workflow reports or any other message to user and groups in you Mattermost with
      the {{p.cmem_plugin_mattermost}} task.

  - name: Spark
    icon: ":simple-apachespark:"
    content: |
      Apply a [Spark](https://spark.apache.org/) function to a specified field using {{p.SparkFunction}}.

  - name: REST
    icon: ":material-application-braces-outline:"
    content: |
      Execute REST requests using {{p.eccencaRestOperator}}.

  - name: PowerBI
    icon: ":other-powerbi:"
    content: |
      Leverage your Knowledge Graphs in PowerBI by using our
      [Corporate Memory Power-BI-Connector](../../consume/consuming-graphs-in-power-bi/index.md).

  - name: Redash
    icon: ":other-redash:"
    content: |
      Leverage your Knowledge Graphs in Redash using the integrated
      [Corporate Memory Redash-Connector](../../consume/consuming-graphs-with-redash/index.md).

  #####
  # Files
  #####

  - name: YAML
    icon: ":simple-yaml:"
    content: |
      Load and integrate data from YAML files with the {{p.cmem_plugin_yaml_parse}} task.

  - name: XML
    icon: ":material-xml:"
    content: |
      Load and write data to XML files with the {{p.xml}} dataset as well as
      {{p.XmlParserOperator}} from external services.

  - name: CSV
    icon: ":fontawesome-solid-file-csv:"
    content: |
      Comma-separated values (CSV) is a text data format which can be processed
      (read and write) with the [CSV Dataset]({{p.csv_ref}}).

  - name: Excel
    icon: ":material-file-excel:"
    content: |
      Use the {{p.excel}} task to read and write to Excel workbooks in the Open XML format (XLSX).

  - name: JSON
    icon: ":material-code-json:"
    content: |
      Use the {{p.json}} dataset to read and write JSON files (JavaScript Object Notation).

  - name: Zipped JSON
    icon: ":material-code-json:"
    content: |
      Use the {{p.json}} dataset to read and write JSON files in a ZIP Archive.

  - name: JSON Lines
    icon: ":material-code-json:"
    content: |
      Use the {{p.json}} dataset to read and write files in the [JSON Lines](https://jsonlines.org/) text file format.

  - name: Avro
    icon: ":other-apacheavro:"
    content: |
      Use the {{p.avro}} dataset to read and write files in the [Avro format](https://avro.apache.org/).

  - name: Parquet
    icon: ":simple-apacheparquet:"
    content: |
      Use the {{p.parquet}} dataset to read and write files in the [Parquet](https://parquet.apache.org/) format.

  - name: ORC
    icon: ":other-apacheorc:"
    content: |
      Use the {{p.orc}} dataset to read and write files in the [ORC](https://orc.apache.org/) format.

  - name: RDF
    icon: ":simple-semanticweb:"
    content: |
      Use the {{p.file}} dataset to read and write files in the RDF formats
      ([N-Quads](https://www.w3.org/TR/n-quads/), [N-Triples](https://www.w3.org/TR/n-triples/),
      [Turtle](https://www.w3.org/TR/turtle/), [RDF/XML](https://www.w3.org/TR/rdf-syntax-grammar/) or
      [RDF/JSON](https://www.w3.org/TR/rdf-json/)).

  #####
  # Databases
  #####

  - name: Neo4J
    icon: ":simple-neo4j:"
    content: |
      Use the {{p.neo4j}} dataset for reading and writing [Neo4j graphs](https://neo4j.com/).

  - name: PostgreSQL
    icon: ":simple-postgresql:"
    content: |
      PostgreSQL can be accessed with the {{p.Jdbc}} dataset and a
      [JDBC driver](https://central.sonatype.com/artifact/org.postgresql/postgresql/versions).

  - name: MariaDB
    icon: ":simple-mariadb:"
    content: |
      MariaDB can be accessed with the {{p.Jdbc}} dataset and a
      [JDBC driver](https://central.sonatype.com/artifact/org.mariadb.jdbc/mariadb-java-client/overview).

  - name: SQLite
    icon: ":simple-sqlite:"
    content: |
      SQLite can be accessed with the {{p.Jdbc}} dataset and a
      [JDBC driver](https://central.sonatype.com/artifact/org.xerial/sqlite-jdbc).

  - name: MySQL
    icon: ":simple-mysql:"
    content: |
      MySQL can be accessed with the {{p.Jdbc}} dataset and a
      [JDBC driver](https://central.sonatype.com/artifact/org.mariadb.jdbc/mariadb-java-client/overview).

  - name: Hive
    icon: ":simple-apachehive:"
    content: |
      Read from or write to an embedded Apache {{p.Hive}} endpoint.

  - name: Microsoft SQL
    icon: ":material-microsoft:"
    content: |
      The Microsoft SQL Server can be accessed with the {{p.Jdbc}} dataset and a
      [JDBC driver](https://central.sonatype.com/artifact/com.microsoft.sqlserver/mssql-jdbc).

  - name: Snowflake
    icon: ":simple-snowflake:"
    content: |
      Snowflake can be accessed with the {{p.SnowflakeJdbc}} dataset and a
      [JDBC driver](https://central.sonatype.com/artifact/net.snowflake/snowflake-jdbc).

  - name: pgvector
    icon: ":black_large_square:"
    content: |
      Store vector embeddings into [pgvector](https://github.com/pgvector/pgvector)
      using the {{p.cmem_plugin_pgvector_Search}}.

  - name: Trino
    icon: ":simple-trino:"
    content: |
      [Trino](https://github.com/trinodb/trino) can be access with the
      {{p.Jdbc}} dataset and a [JDBC driver](https://trino.io/docs/current/client/jdbc.html).

